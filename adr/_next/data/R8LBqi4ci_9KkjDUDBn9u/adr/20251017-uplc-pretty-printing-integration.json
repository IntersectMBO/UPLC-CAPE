{"pageProps":{"projectName":"UPLC-CAPE","currentAdr":{"slug":"20251017-uplc-pretty-printing-integration","package":null,"title":"UPLC Pretty-Printing Integration","status":"accepted","supersededBy":null,"tags":["tooling","formatting","uplc","developer-experience"],"deciders":[],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\nUPLC files (`.uplc`) in the repository are often minified or inconsistently formatted, making them difficult to review, compare, and debug. The `plutus` executable from the Plutus repository provides pretty-printing capabilities via its output flag (`-o`), but there was no convenient way to:\n\n1. Pretty-print UPLC files in place\n2. Automatically format UPLC files as part of the development workflow\n3. Ensure consistent formatting across all submissions\n\n**Question**: How can we integrate UPLC pretty-printing into our existing tooling and workflow?\n\n## Decision Drivers\n\n- Maintain consistency with existing formatting tools (treefmt)\n- Provide both manual and automatic formatting options\n- Avoid breaking existing workflows\n- Reuse existing infrastructure (plutus executable, treefmt)\n- Follow naming conventions consistent with project structure\n\n## Considered Options\n\n1. **Manual plutus invocation only** - Document the plutus command pattern\n2. **Standalone script only** - Create a helper script without treefmt integration\n3. **Full treefmt integration** - Add UPLC formatting to treefmt with helper scripts\n4. **Custom Haskell tool** - Build a dedicated UPLC formatter in the measure-app\n\n## Decision Outcome\n\nChosen option: **\"Full treefmt integration\"**, because it:\n\n- Integrates seamlessly with existing `treefmt` workflow\n- Provides both manual (`pretty-uplc`) and automatic (via `treefmt`) formatting\n- Requires minimal additional tooling (reuses existing `plutus` executable)\n- Follows established patterns (similar to how fourmolu handles Haskell)\n- Consistent naming with existing script (`scripts/pretty-uplc.sh`)\n\n### Implementation Overview\n\n**Components Created:**\n\n1. **`scripts/pretty-uplc.sh`**: Standalone bash script for manual use\n   - Takes a single UPLC file path as argument\n   - Uses temporary file for safe in-place replacement\n   - Validates file existence and plutus availability\n   - Provides clear error messages and success confirmation\n\n2. **`pretty-uplc` command**: Nix shell wrapper (defined in `flake.nix`)\n   - Available after `nix develop` or `direnv reload`\n   - Provides convenient command-line interface\n   - Identical implementation to standalone script\n\n3. **treefmt integration**: Added to `treefmt.toml`\n   - Formatter: `pretty-uplc`\n   - Command: `scripts/pretty-uplc.sh`\n   - Includes: `*.uplc`\n   - Runs automatically with `treefmt`\n\n**Usage Patterns:**\n\n```bash\n# Manual single file formatting\npretty-uplc submissions/fibonacci/MyCompiler_1.0.0_handle/fibonacci.uplc\n\n# Format all files via treefmt (includes UPLC files)\ntreefmt\n\n# Direct script invocation (without nix shell command)\n./scripts/pretty-uplc.sh path/to/file.uplc\n```\n\n**Technical Implementation:**\n\nThe script uses a safe temporary file pattern to avoid data loss:\n\n```bash\ntemp_file=$(mktemp)\ntrap 'rm -f \"$temp_file\"' EXIT\nplutus \"$uplc_file\" -o \"$temp_file\"\n# Ensure file ends with a newline\nif [ -s \"$temp_file\" ] && [ \"$(tail -c 1 \"$temp_file\" | wc -l)\" -eq 0 ]; then\n  echo \"\" >> \"$temp_file\"\nfi\nmv \"$temp_file\" \"$uplc_file\"\n```\n\nThis ensures:\n\n- No data loss if plutus fails\n- Automatic cleanup of temporary files\n- Atomic replacement (mv is atomic on same filesystem)\n- Files always end with a newline (POSIX standard)\n\n### Positive Consequences\n\n- **Consistent formatting**: All UPLC files follow the same pretty-printed format\n- **Improved readability**: Pretty-printed UPLC easier to review in PRs\n- **Automated workflow**: UPLC files formatted automatically with `treefmt`\n- **Manual control**: Can format individual files when needed\n- **Zero dependencies**: Reuses existing `plutus` executable from development environment\n- **Safe operation**: Temporary file pattern prevents data loss\n- **Clear feedback**: Success/error messages guide users\n\n### Negative Consequences\n\n- **Additional processing time**: treefmt now processes UPLC files (16 files currently)\n- **Requires plutus**: Only works inside nix shell (documented limitation)\n- **Line length changes**: Pretty-printing may increase file size/lines\n- **Git diffs**: Initial formatting of existing files creates large diffs\n\n## Documentation Updates\n\nUpdated the following documentation:\n\n1. **CLAUDE.md**:\n   - Added `pretty-uplc` to tools list\n   - Added UPLC formatting command reference\n   - Updated mandatory treefmt file types to include `.uplc`\n\n2. **README.md**:\n   - Added UPLC formatting section under \"Development\"\n   - Documented both manual and automatic usage\n   - Explained integration with treefmt\n\n3. **This ADR**: Documents decision rationale and implementation\n\n## Applicability\n\n**When to Use:**\n\n- Before committing UPLC files to ensure consistent formatting\n- When reviewing UPLC files for debugging\n- As part of automated CI/CD formatting checks\n- When comparing UPLC outputs from different compilers\n\n**Limitations:**\n\n- Only works inside nix development shell (requires `plutus` executable)\n- Formats entire file (no selective formatting)\n- Requires write access to UPLC file location\n\n## Links\n\n- [Plutus Repository](https://github.com/IntersectMBO/plutus) - Source of `plutus` executable\n- [treefmt](https://treefmt.com/) - Multi-formatter orchestration tool\n- Related file: `scripts/pretty-uplc.sh`\n- Related file: `treefmt.toml`\n- Related file: `flake.nix` (pretty-uplc command definition)\n"},"creationDate":"2025-10-17T20:57:05.000Z","lastEditDate":"2025-10-17T20:57:05.000Z","lastEditAuthor":"Yura Lazaryev","publicationDate":"2025-10-17T21:59:59.000Z","file":{"relativePath":"doc/adr/20251017-uplc-pretty-printing-integration.md","absolutePath":"/home/runner/work/UPLC-CAPE/UPLC-CAPE/doc/adr/20251017-uplc-pretty-printing-integration.md"},"repository":{"provider":"github","viewUrl":"https://github.com/IntersectMBO/UPLC-CAPE/blob/master/doc/adr/20251017-uplc-pretty-printing-integration.md"}},"l4bVersion":"1.1.0"},"__N_SSG":true}