{
  "version": "1.0.0",
  "description": "Test cases for two-party escrow smart contract validator",
  "tests": [
    {
      "name": "redeemer_integer_3",
      "description": "Validator fails when redeemer is integer 3 (not 0, 1, or 2)",
      "input": {
        "type": "builtin_data",
        "value": "3"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_integer_4",
      "description": "Validator fails when redeemer is integer 4 (not 0, 1, or 2)",
      "input": {
        "type": "builtin_data",
        "value": "4"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_integer_99",
      "description": "Validator fails when redeemer is integer 99 (not 0, 1, or 2)",
      "input": {
        "type": "builtin_data",
        "value": "99"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_integer_negative_1",
      "description": "Validator fails when redeemer is integer -1 (not 0, 1, or 2)",
      "input": {
        "type": "builtin_data",
        "value": "-1"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_constructor_0",
      "description": "Validator fails when redeemer is constructor instead of integer",
      "input": {
        "type": "builtin_data",
        "value": "0()"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_bytestring",
      "description": "Validator fails when redeemer is bytestring instead of integer",
      "input": {
        "type": "builtin_data",
        "value": "#deadbeef"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_list_with_integers",
      "description": "Validator fails when redeemer is list [1,2,3] instead of integer",
      "input": {
        "type": "builtin_data",
        "value": "[1 2 3]"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_map_with_data",
      "description": "Validator fails when redeemer is map instead of integer",
      "input": {
        "type": "builtin_data",
        "value": "{1:42}"
      },
      "expected": {
        "type": "error"
      }
    }
  ]
}
