{
  "version": "1.0.0",
  "description": "Test cases for two-party escrow smart contract validator",
  "data_structures": {
    "buyer_pubkey": {
      "type": "builtin_data",
      "value": "#aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
    },
    "seller_pubkey": {
      "type": "builtin_data",
      "value": "#bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"
    },
    "successful_deposit": {
      "type": "script_context",
      "script_context": {
        "baseline": "spending",
        "patches": [
          {
            "op": "set_redeemer",
            "redeemer": "0"
          },
          {
            "op": "add_signature",
            "pubkey_hash": "@buyer_pubkey"
          },
          {
            "op": "add_input_utxo",
            "utxo_ref": "3333333333333333333333333333333333333333333333333333333333333333:0",
            "lovelace": 75000000,
            "is_own_input": true
          },
          {
            "op": "set_output_value",
            "lovelace": 75000000
          }
        ]
      }
    }
  },
  "tests": [
    {
      "name": "redeemer_integer_3",
      "description": "Validator fails when redeemer is integer 3 (not 0, 1, or 2)",
      "input": {
        "type": "builtin_data",
        "value": "3"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_integer_4",
      "description": "Validator fails when redeemer is integer 4 (not 0, 1, or 2)",
      "input": {
        "type": "builtin_data",
        "value": "4"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_integer_99",
      "description": "Validator fails when redeemer is integer 99 (not 0, 1, or 2)",
      "input": {
        "type": "builtin_data",
        "value": "99"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_integer_negative_1",
      "description": "Validator fails when redeemer is integer -1 (not 0, 1, or 2)",
      "input": {
        "type": "builtin_data",
        "value": "-1"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_constructor_0",
      "description": "Validator fails when redeemer is constructor instead of integer",
      "input": {
        "type": "builtin_data",
        "value": "0()"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_bytestring",
      "description": "Validator fails when redeemer is bytestring instead of integer",
      "input": {
        "type": "builtin_data",
        "value": "#deadbeef"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_list_with_integers",
      "description": "Validator fails when redeemer is list [1,2,3] instead of integer",
      "input": {
        "type": "builtin_data",
        "value": "[1 2 3]"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "redeemer_map_with_data",
      "description": "Validator fails when redeemer is map instead of integer",
      "input": {
        "type": "builtin_data",
        "value": "{1:42}"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "simple_builtin_data_redeemer_0",
      "description": "Test redeemer 0 with simple builtin_data (not script_context)",
      "input": {
        "type": "builtin_data",
        "value": "0"
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "deposit_successful",
      "description": "Deposit with buyer signature and exactly 75 ADA should succeed",
      "input": {
        "type": "script_context",
        "script_context": {
          "baseline": "@successful_deposit",
          "patches": []
        }
      },
      "expected": {
        "type": "value",
        "content": "(con unit ())"
      }
    },
    {
      "name": "deposit_without_buyer_signature",
      "description": "Deposit without buyer signature should fail",
      "input": {
        "type": "script_context",
        "script_context": {
          "baseline": "@successful_deposit",
          "patches": [
            {
              "op": "remove_signature",
              "pubkey_hash": "@buyer_pubkey"
            }
          ]
        }
      },
      "expected": {
        "type": "error"
      }
    },
    {
      "name": "deposit_with_incorrect_amount",
      "description": "Deposit with buyer signature but wrong amount (50 ADA) should fail",
      "input": {
        "type": "script_context",
        "script_context": {
          "baseline": "@successful_deposit",
          "patches": [
            {
              "op": "set_output_value",
              "lovelace": 50000000
            }
          ]
        }
      },
      "expected": {
        "type": "error"
      }
    }
  ]
}
