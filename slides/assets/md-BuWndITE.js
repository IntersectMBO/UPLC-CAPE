import{_ as m}from"./slidev/VSwitch-CVQdUm0s.js";import{_ as p}from"./Mermaid.vue_vue_type_script_setup_true_lang-C1QnRWQU.js";import{b as c,o as A,w as o,g as l,e as n,A as e,m as g,v as d,x as C,B as r}from"./modules/vue-Bgke8tQ4.js";import{I as w}from"./slidev/center-drVaqJW4.js";import{u as h,f as E}from"./slidev/context-CIjXkXHK.js";import"./modules/shiki-mDVCqiSy.js";import"./index-DuMeNKXT.js";import"./modules/file-saver-B8IIMB9x.js";const D={__name:"slides.md__slidev_16",setup(b){const{$clicksContext:s,$frontmatter:i}=h();return s.setup(),(f,t)=>{const u=p,a=m;return A(),c(w,d(C(r(E)(r(i),15))),{default:o(()=>[t[4]||(t[4]=l("h2",null,"CAPE Workflow",-1)),n(a,{unmount:!0},{0:o(()=>[n(u,g({"code-lz":"KTDeEsDtwFwLgASgOQwBYFMC2Hl2QEYCGAzrgDQKqY4BqRATuEQQDYYl5JUAOTWjAJ4BhAPatRDPMgDEABgCsADgAiwgOzJKyPuAENBAFQwAPGGIlT8MgGZ2tvfkIBCkgCYYGFydJkBmAIdkVigMbytZAL8gm1FIGABlcAAvXHwARiUeE2QAX3yQACgAcwYiHjQEABkAJUKEBoQAQQBtBIBjDEhGcFEAXQQAWkGAPgRnNoBXAixwEhJeyD76xuch0YRhFoBZDFJJhgxlxs31sZUWmoweSRhllYaSGEF2ZoQbcFZWOHllNXVyE8GKIANYYH5RQEwYFgwYAd3AbnQcD82XI7XEkh+dhsDwQTxeGHG70+3xkCjkzgALH4AExQmHg/wBBmgjDwxHI1EmdGYhjYux4gmvYQkr4/ACiKgUADZ0s5WWCISygWyOUi0Ci0RjLALcSdhUSVGKySozQAxORyRVMyGq2EIjVank6rHMvxAA"},{}),null,16)]),1:o(()=>[...t[0]||(t[0]=[l("p",null,[l("strong",null,"Create a Scenario")],-1),l("ol",null,[l("li",null,[e("Choose type: "),l("strong",null,"Fixed algorithm"),e(" or "),l("strong",null,"Flexible")]),l("li",null,[e("Create scenario from a template with "),l("code",null,"cape benchmark new <name>")]),l("li",null,[e("Document the benchmark scenario in "),l("code",null,"<scenario>.md")]),l("li",null,[e("Create test suite in "),l("code",null,"cape-tests.json")])],-1)])]),2:o(()=>[...t[1]||(t[1]=[l("p",null,[l("strong",null,"Make a Submission")],-1),l("ol",null,[l("li",null,"Create project with sources (GitHub repo or local)"),l("li",null,[e("Compile your program to UPLC (the "),l("code",null,"<scenario>.uplc"),e(" file)")]),l("li",null,[e("Create submission directory from a template with"),l("br"),l("code",null,"cape submission new <scenario>")]),l("li",null,"Fill in metadata, README")],-1)])]),3:o(()=>[...t[2]||(t[2]=[l("p",null,[l("strong",null,"Measure")],-1),l("p",null,[l("code",null,"cape"),e(" runs UPLC on CEK machine, collects metrics")],-1),l("ol",null,[l("li",null,[e("Validate correctness "),l("code",null,"cape submission verify <path>")]),l("li",null,[e("Collect metrics "),l("code",null,"cape submission measure <path>")])],-1)])]),4:o(()=>[...t[3]||(t[3]=[l("p",null,[l("strong",null,"Preview results: Web Report")],-1),l("p",null,"CAPE generates report with tables and graphs",-1),l("ul",null,[l("li",null,[e("Manual preview with "),l("code",null,"cape submission report")]),l("li",null,"Automatic preview for PRs"),l("li",null,[e("Published: "),l("a",{href:"https://intersectmbo.github.io/UPLC-CAPE/",target:"_blank"},"https://intersectmbo.github.io/UPLC-CAPE/")])],-1)])]),_:1})]),_:1},16)}}};export{D as default};
