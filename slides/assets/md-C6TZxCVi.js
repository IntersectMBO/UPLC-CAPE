import{_ as s}from"./slidev/VSwitch-BAkXwFRc.js";import{b as a,o as p,w as t,g as l,e as d,A as n,v as m,x as c,B as o}from"./modules/vue-9Q8YSEl7.js";import{I as g}from"./slidev/center-BonTDrF8.js";import{u as v,f}from"./slidev/context-HtCIdcFs.js";import"./modules/shiki-CF7fL4qr.js";import"./index-DPo3SfWR.js";const A={__name:"slides.md__slidev_23",setup(h){const{$clicksContext:i,$frontmatter:u}=v();return i.setup(),(C,e)=>{const r=s;return p(),a(g,m(c(o(f)(o(u),22))),{default:t(()=>[e[6]||(e[6]=l("h2",null,"Workshop: Hands-on Contribution",-1)),d(r,{unmount:!0},{0:t(()=>[...e[0]||(e[0]=[l("p",null,[l("strong",null,"Choose Your Path")],-1),l("ul",null,[l("li",null,[l("strong",null,"Path 1: Simple Scenarios"),n(" - Beginners, learn submission process")]),l("li",null,[l("strong",null,"Path 2: Real-World Scenario"),n(" - Advanced, validator patterns")]),l("li",null,[l("strong",null,"Plinth Users"),n(" - In-repo convenience available")]),l("li",null,[l("strong",null,"Support Available"),n(" - Help with submission process & language")]),l("li",null,[l("strong",null,"Getting Started"),n(" - Clone, setup, implement")])],-1)])]),1:t(()=>[...e[1]||(e[1]=[l("p",null,[l("strong",null,"Path 1: Simple Scenarios (Beginners)")],-1),l("ul",null,[l("li",null,[n("Implement "),l("code",null,"factorial_naive_recursion")]),l("li",null,"Use the language/compiler of your choice"),l("li",null,"Focus: Learn the submission process without validator complexity")],-1),l("p",null,[l("strong",null,"Benefits:")],-1),l("ul",null,[l("li",null,"Straightforward implementation"),l("li",null,"No ScriptContext complexity"),l("li",null,"Full end-to-end experience in 20-30 minutes")],-1)])]),2:t(()=>[...e[2]||(e[2]=[l("p",null,[l("strong",null,"Path 2: Real-World Scenario (Advanced)")],-1),l("ul",null,[l("li",null,[n("Implement "),l("strong",null,"Linear Vesting"),n(" validator")]),l("li",null,"Multi-stage validator interactions, ScriptContext handling"),l("li",null,"Focus: Real-world validator patterns and optimizations")],-1),l("p",null,[l("strong",null,"Benefits:")],-1),l("ul",null,[l("li",null,"Representative of production validators"),l("li",null,"Learn real optimization techniques"),l("li",null,"More educational and challenging")],-1)])]),3:t(()=>[...e[3]||(e[3]=[l("p",null,[l("strong",null,"Plinth Users: In-Repo Convenience")],-1),l("ul",null,[l("li",null,"No separate project needed!"),l("li",null,"Implement directly in UPLC-CAPE repo"),l("li",null,[n("Structure already exists: "),l("code",null,"plinth-submissions-app/"),n(" and "),l("code",null,"lib/")]),l("li",null,[n("See "),l("code",null,"cape.cabal"),n(" for examples")])],-1),l("p",null,[l("strong",null,"For other languages:")],-1),l("ul",null,[l("li",null,"You’ll need your own project setup"),l("li",null,"Compile to UPLC, bring the output file")],-1)])]),4:t(()=>[...e[4]||(e[4]=[l("p",null,[l("strong",null,"Support Available")],-1),l("ul",null,[l("li",null,"UPLC-CAPE submission process help"),l("li",null,"Plinth language guidance"),l("li",null,"Troubleshooting and Q&A"),l("li",null,"We’ll circulate to help individuals")],-1)])]),5:t(()=>[...e[5]||(e[5]=[l("p",null,[l("strong",null,"Getting Started")],-1),l("ol",null,[l("li",null,[n("Clone repo: "),l("code",null,"git clone https://github.com/IntersectMBO/UPLC-CAPE")]),l("li",null,[n("Setup environment: "),l("code",null,"nix develop"),n(" (binary cache available)")]),l("li",null,"Choose your path and scenario"),l("li",null,"Start implementing!")],-1),l("p",null,[l("strong",null,"Even if you don’t finish:")],-1),l("ul",null,[l("li",null,"You’ve learned the process"),l("li",null,"Continue after the conference and submit a PR"),l("li",null,"Goal: understand the workflow and get started")],-1)])]),_:1})]),_:1},16)}}};export{A as default};
