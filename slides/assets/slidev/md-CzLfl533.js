import{_ as H}from"./VSwitch-SuVZ3Xod.js";import{h as N,i as V}from"../modules/unplugin-icons-21dMvOKP.js";import{d as T,r as $,H as G,G as S,E as q,K as _,O as M,f as D,o as h,j as U,i as W,B as c,b as C,k as j,n as R,w as a,g as e,e as f,A as i,m as w,v as z,x as K}from"../modules/vue-BXbqQv4r.js";import{v as x,m as O,C as F,w as X,x as Y}from"../index-DDx1krHu.js";import{u as E,f as J}from"./context-BbGGAmrJ.js";import{I as Q}from"./center-D1Mlohfb.js";import"../modules/shiki-CJ1do2kA.js";const Z=["title"],ee=T({__name:"CodeBlockWrapper",props:{ranges:{type:Array,default:()=>[]},finally:{type:[String,Number],default:"last"},startLine:{type:Number,default:1},lines:{type:Boolean,default:x.lineNumbers},at:{type:[String,Number],default:"+1"},maxHeight:{type:String,default:void 0}},setup(y){const s=y,{$clicksContext:r}=E(),n=$(),l=O();G(()=>{r.unregister(l)}),S(()=>{var t;(t=n.value)==null||t.classList.toggle("slidev-code-line-numbers",s.lines)}),q(()=>{var g;if(!r||!((g=s.ranges)!=null&&g.length))return;const t=r.calculateSince(s.at,s.ranges.length-1);r.register(l,t);const o=_(()=>t?Math.max(0,r.current-t.start+1):F),u=_(()=>s.finally==="last"?s.ranges.at(-1):s.finally.toString());S(()=>{if(!n.value)return;let k=s.ranges[o.value]??u.value;const v=k==="hide";n.value.classList.toggle(X,v),v&&(k=s.ranges[o.value+1]??u.value);const b=n.value.querySelector(".shiki"),A=Array.from(b.querySelectorAll("code > .line")),P=A.length;if(Y(k,P,s.startLine,d=>[A[d]]),s.maxHeight){const d=Array.from(b.querySelectorAll(".line.highlighted"));d.reduce((B,I)=>I.offsetHeight+B,0)>n.value.offsetHeight?d[0].scrollIntoView({behavior:"smooth",block:"start"}):d.length>0&&d[Math.round((d.length-1)/2)].scrollIntoView({behavior:"smooth",block:"center"})}})});const{copied:p,copy:m}=M();function L(){var o,u;const t=(u=(o=n.value)==null?void 0:o.querySelector(".slidev-code"))==null?void 0:u.textContent;t&&m(t)}return(t,o)=>{const u=N,g=V;return h(),D("div",{ref_key:"el",ref:n,class:R(["slidev-code-wrapper relative group",{"slidev-code-line-numbers":s.lines}]),style:j({"max-height":s.maxHeight,"overflow-y":s.maxHeight?"scroll":void 0,"--start":s.startLine})},[U(t.$slots,"default"),c(x).codeCopy?(h(),D("button",{key:0,class:"slidev-code-copy absolute top-0 right-0 transition opacity-0 group-hover:opacity-20 hover:!opacity-100",title:c(p)?"Copied":"Copy",onClick:o[0]||(o[0]=k=>L())},[c(p)?(h(),C(u,{key:0,class:"p-2 w-8 h-8"})):(h(),C(g,{key:1,class:"p-2 w-8 h-8"}))],8,Z)):W("v-if",!0)],6)}}}),ue={__name:"slides.md__slidev_21",setup(y){const{$clicksContext:s,$frontmatter:r}=E();return s.setup(),(n,l)=>{const p=ee,m=H;return h(),C(Q,z(K(c(J)(c(r),20))),{default:a(()=>[l[13]||(l[13]=e("h2",null,"Workshop: Hands-on Contribution",-1)),f(m,{unmount:!0},{0:a(()=>[...l[0]||(l[0]=[e("p",null,[e("strong",null,"Your Task")],-1),e("p",null,[i("Create a complete benchmark for the "),e("strong",null,"Euclidean GCD algorithm")],-1),e("ol",null,[e("li",null,[e("strong",null,"Create scenario"),i(" - Define the problem and test cases")]),e("li",null,[e("strong",null,"Create submission"),i(" - Implement in your language of choice")])],-1),e("p",null,"Full end-to-end CAPE workflow in ~30 minutes",-1)])]),1:a(()=>[l[2]||(l[2]=e("p",null,[e("strong",null,"Step 1: Create Scenario")],-1)),l[3]||(l[3]=e("p",null,"Use the CAPE CLI to create a new scenario:",-1)),f(p,w({},{ranges:[]}),{default:a(()=>[...l[1]||(l[1]=[e("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[e("code",{class:"language-bash"},[e("span",{class:"line"},[e("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}},"cape"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}}," benchmark"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}}," new"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}}," euclidean_gcd")])])],-1)])]),_:1},16),l[4]||(l[4]=e("p",null,"Then:",-1)),l[5]||(l[5]=e("ul",null,[e("li",null,[i("Edit "),e("code",null,"scenarios/euclidean_gcd/euclidean_gcd.md"),i(" with algorithm description")]),e("li",null,[i("Create test cases in "),e("code",null,"scenarios/euclidean_gcd/cape-tests.json")]),e("li",null,"Define expected behavior for GCD(a, b)")],-1))]),2:a(()=>[l[7]||(l[7]=e("p",null,[e("strong",null,"Step 2: Create Submission")],-1)),l[8]||(l[8]=e("p",null,"Implement the GCD algorithm in your preferred language:",-1)),f(p,w({},{ranges:[]}),{default:a(()=>[...l[6]||(l[6]=[e("pre",{class:"shiki shiki-themes vitesse-dark vitesse-light slidev-code",style:{"--shiki-dark":"#dbd7caee","--shiki-light":"#393a34","--shiki-dark-bg":"#121212","--shiki-light-bg":"#ffffff"}},[e("code",{class:"language-bash"},[e("span",{class:"line"},[e("span",{style:{"--shiki-dark":"#80A665","--shiki-light":"#59873A"}},"cape"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}}," submission"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}}," new"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}}," euclidean_gcd"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," <"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"compile"),e("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"r"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},">"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," <"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"versio"),e("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"n"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},">"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}}," <"),e("span",{style:{"--shiki-dark":"#C98A7D","--shiki-light":"#B56959"}},"handl"),e("span",{style:{"--shiki-dark":"#DBD7CAEE","--shiki-light":"#393A34"}},"e"),e("span",{style:{"--shiki-dark":"#CB7676","--shiki-light":"#AB5959"}},">")])])],-1)])]),_:1},16),l[9]||(l[9]=e("p",null,"Then:",-1)),l[10]||(l[10]=e("ul",null,[e("li",null,"Write your implementation (Plinth, Aiken, OpShin, etc.)"),e("li",null,"Compile to UPLC"),e("li",null,[i("Place compiled "),e("code",null,"euclidean_gcd.uplc"),i(" in submission directory")]),e("li",null,[i("Validate: "),e("code",null,"cape submission verify <path>")])],-1))]),3:a(()=>[...l[11]||(l[11]=[e("p",null,[e("strong",null,"Support & Resources")],-1),e("p",null,[e("strong",null,"Weâ€™ll help with:")],-1),e("ul",null,[e("li",null,[i("CAPE CLI commands ("),e("code",null,"cape benchmark"),i(", "),e("code",null,"cape submission"),i(")")]),e("li",null,"Test case format and validation"),e("li",null,"Language-specific questions (Plinth, Aiken, etc.)"),e("li",null,"Troubleshooting compilation and validation")],-1),e("p",null,[e("strong",null,"Plinth users:"),i(" Check "),e("code",null,"plinth/"),i(" directory for examples")],-1)])]),4:a(()=>[...l[12]||(l[12]=[e("p",null,[e("strong",null,"Getting Started")],-1),e("ol",null,[e("li",null,[i("Clone: "),e("code",null,"git clone https://github.com/IntersectMBO/UPLC-CAPE")]),e("li",null,[i("Setup: "),e("code",null,"nix develop"),i(" (binary cache available)")]),e("li",null,[i("Verify: "),e("code",null,"cape --version")]),e("li",null,"Start with Step 1!")],-1),e("p",null,[e("strong",null,"Goal:"),i(" Complete both steps, or just Step 1 if new to UPLC")],-1)])]),_:1})]),_:1},16)}}};export{ue as default};
