{
  "evaluations": [
    {
      "cpu_units": 471986,
      "description": "Fibonacci of 0 should return 0",
      "execution_result": "success",
      "memory_units": 2302,
      "name": "fibonacci_0"
    },
    {
      "cpu_units": 471986,
      "description": "Fibonacci of 1 should return 1",
      "execution_result": "success",
      "memory_units": 2302,
      "name": "fibonacci_1"
    },
    {
      "cpu_units": 1799382,
      "description": "Fibonacci of 2 should return 1",
      "execution_result": "success",
      "memory_units": 7212,
      "name": "fibonacci_2"
    },
    {
      "cpu_units": 3078778,
      "description": "Fibonacci of 3 should return 2",
      "execution_result": "success",
      "memory_units": 11822,
      "name": "fibonacci_3"
    },
    {
      "cpu_units": 9475758,
      "description": "Fibonacci of 5 should return 5",
      "execution_result": "success",
      "memory_units": 34872,
      "name": "fibonacci_5"
    },
    {
      "cpu_units": 42740054,
      "description": "Fibonacci of 8 should return 21",
      "execution_result": "success",
      "memory_units": 154732,
      "name": "fibonacci_8"
    },
    {
      "cpu_units": 113106834,
      "description": "Fibonacci of 10 should return 55",
      "execution_result": "success",
      "memory_units": 408282,
      "name": "fibonacci_10"
    },
    {
      "cpu_units": 1262004442,
      "description": "Fibonacci of 15 should return 610",
      "execution_result": "success",
      "memory_units": 4548062,
      "name": "fibonacci_15"
    },
    {
      "cpu_units": 14003509206,
      "description": "Fibonacci of 20 should return 6765",
      "execution_result": "success",
      "memory_units": 50459052,
      "name": "fibonacci_20"
    },
    {
      "cpu_units": 155308959218,
      "description": "Fibonacci of 25 should return 75025 (original benchmark target)",
      "execution_result": "success",
      "memory_units": 559619722,
      "name": "fibonacci_25"
    },
    {
      "cpu_units": 471986,
      "description": "Fibonacci of negative number should return the negative number itself based on current implementation",
      "execution_result": "success",
      "memory_units": 2302,
      "name": "fibonacci_negative"
    }
  ],
  "execution_environment": {
    "evaluator": "PlutusTx.Eval-1.52.0.0"
  },
  "measurements": {
    "block_cpu_budget_pct": 388.272398045,
    "block_memory_budget_pct": 902.6124548387097,
    "cpu_units": {
      "maximum": 155308959218,
      "median": 9475758,
      "minimum": 471986,
      "sum": 170746089630,
      "sum_negative": 0,
      "sum_positive": 170746089630
    },
    "execution_fee_lovelace": 47810757,
    "memory_units": {
      "maximum": 559619722,
      "median": 34872,
      "minimum": 2302,
      "sum": 615250662,
      "sum_negative": 0,
      "sum_positive": 615250662
    },
    "reference_script_fee_lovelace": 1290,
    "script_size_bytes": 86,
    "scripts_per_block": 0,
    "scripts_per_tx": 0,
    "term_size": 79,
    "total_fee_lovelace": 47812047,
    "tx_cpu_budget_pct": 1553.08959218,
    "tx_memory_budget_pct": 3997.2837285714286
  },
  "scenario": "fibonacci_naive_recursion",
  "timestamp": "2025-10-23T14:41:57Z",
  "version": "1.0.0",
  "notes": "Generated using UPLC-CAPE measure tool"
}
