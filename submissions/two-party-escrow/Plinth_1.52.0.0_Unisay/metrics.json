{
  "evaluations": [
    {
      "cpu_units": 24688,
      "description": "Validator fails when redeemer is integer 3 (not 0, 1, or 2)",
      "execution_result": "success",
      "memory_units": 132,
      "name": "redeemer_integer_3"
    },
    {
      "cpu_units": 24688,
      "description": "Validator fails when redeemer is integer 4 (not 0, 1, or 2)",
      "execution_result": "success",
      "memory_units": 132,
      "name": "redeemer_integer_4"
    },
    {
      "cpu_units": 24688,
      "description": "Validator fails when redeemer is integer 99 (not 0, 1, or 2)",
      "execution_result": "success",
      "memory_units": 132,
      "name": "redeemer_integer_99"
    },
    {
      "cpu_units": 24688,
      "description": "Validator fails when redeemer is integer -1 (not 0, 1, or 2)",
      "execution_result": "success",
      "memory_units": 132,
      "name": "redeemer_integer_negative_1"
    },
    {
      "cpu_units": 248343,
      "description": "Validator fails when redeemer is constructor instead of integer",
      "execution_result": "success",
      "memory_units": 196,
      "name": "redeemer_constructor_0"
    },
    {
      "cpu_units": 24688,
      "description": "Validator fails when redeemer is bytestring instead of integer",
      "execution_result": "success",
      "memory_units": 132,
      "name": "redeemer_bytestring"
    },
    {
      "cpu_units": 24688,
      "description": "Validator fails when redeemer is list [1,2,3] instead of integer",
      "execution_result": "success",
      "memory_units": 132,
      "name": "redeemer_list_with_integers"
    },
    {
      "cpu_units": 24688,
      "description": "Validator fails when redeemer is map instead of integer",
      "execution_result": "success",
      "memory_units": 132,
      "name": "redeemer_map_with_data"
    },
    {
      "cpu_units": 24688,
      "description": "Test redeemer 0 with simple builtin_data (not script_context)",
      "execution_result": "success",
      "memory_units": 132,
      "name": "simple_builtin_data_redeemer_0"
    },
    {
      "cpu_units": 53865841,
      "description": "Deposit with buyer signature and exactly 75 ADA should succeed",
      "execution_result": "success",
      "memory_units": 198708,
      "name": "deposit_successful"
    },
    {
      "cpu_units": 32060441,
      "description": "Deposit without buyer signature should fail",
      "execution_result": "success",
      "memory_units": 125236,
      "name": "deposit_without_buyer_signature"
    },
    {
      "cpu_units": 32303403,
      "description": "Deposit with buyer signature but wrong amount (50 ADA) should fail",
      "execution_result": "success",
      "memory_units": 124891,
      "name": "deposit_with_incorrect_amount"
    },
    {
      "cpu_units": 16908282,
      "description": "Deposit fails when ADA goes to pubkey address instead of script",
      "execution_result": "success",
      "memory_units": 63020,
      "name": "deposit_to_wrong_address"
    },
    {
      "cpu_units": 100265387,
      "description": "Accept with seller signature and 75 ADA to seller should succeed",
      "execution_result": "success",
      "memory_units": 377399,
      "name": "accept_successful"
    },
    {
      "cpu_units": 51074434,
      "description": "Accept operation fails when seller signature is missing",
      "execution_result": "success",
      "memory_units": 188988,
      "name": "accept_without_seller_signature"
    },
    {
      "cpu_units": 136846037,
      "description": "Accept operation fails with wrong payment amount (50 ADA instead of 75 ADA)",
      "execution_result": "success",
      "memory_units": 500003,
      "name": "accept_with_incorrect_payment_amount"
    },
    {
      "cpu_units": 43521092,
      "description": "Accept operation fails when payment goes to impostor address instead of seller",
      "execution_result": "success",
      "memory_units": 167128,
      "name": "accept_with_payment_to_wrong_address"
    },
    {
      "cpu_units": 16911136,
      "description": "Accept operation without valid deposit UTXO (should fail - invalid escrow state)",
      "execution_result": "success",
      "memory_units": 63019,
      "name": "accept_without_prior_deposit"
    },
    {
      "cpu_units": 100265387,
      "description": "Accept with multiple script inputs (ambiguous state - expects pass)",
      "execution_result": "success",
      "memory_units": 377399,
      "name": "accept_with_multiple_inputs"
    },
    {
      "cpu_units": 43521092,
      "description": "Accept with only 50 ADA payment to seller (insufficient - expects fail)",
      "execution_result": "success",
      "memory_units": 167128,
      "name": "accept_with_partial_payment_to_seller"
    },
    {
      "cpu_units": 43521092,
      "description": "Accept with 100 ADA payment to seller (excess amount - expects fail due to exact validation)",
      "execution_result": "success",
      "memory_units": 167128,
      "name": "accept_with_excess_payment_to_seller"
    },
    {
      "cpu_units": 100265387,
      "description": "Accept with datum attached to seller's payment (expects pass)",
      "execution_result": "success",
      "memory_units": 377399,
      "name": "accept_with_datum_attached"
    },
    {
      "cpu_units": 139262037,
      "description": "Accept with payment split across two outputs to seller (50+25 ADA - expects pass)",
      "execution_result": "success",
      "memory_units": 515103,
      "name": "accept_with_multiple_outputs_to_seller"
    },
    {
      "cpu_units": 50727194,
      "description": "Accept while leaving funds in script (should fail - incomplete withdrawal)",
      "execution_result": "success",
      "memory_units": 188449,
      "name": "accept_with_remaining_script_output"
    },
    {
      "cpu_units": 103163723,
      "description": "Refund after deadline with buyer signature should succeed",
      "execution_result": "success",
      "memory_units": 389251,
      "name": "refund_successful"
    },
    {
      "cpu_units": 103163723,
      "description": "Refund exactly 1 second after deadline expiry should succeed",
      "execution_result": "success",
      "memory_units": 389251,
      "name": "refund_after_exact_deadline"
    },
    {
      "cpu_units": 103303560,
      "description": "Refund with multiple script inputs should succeed (no single input validation)",
      "execution_result": "success",
      "memory_units": 389852,
      "name": "refund_with_multiple_inputs"
    },
    {
      "cpu_units": 103303560,
      "description": "Refund with datum attached to buyer's output should succeed",
      "execution_result": "success",
      "memory_units": 389852,
      "name": "refund_with_datum_attached"
    },
    {
      "cpu_units": 136807290,
      "description": "Refund split across two outputs to buyer (50+25 ADA) should succeed",
      "execution_result": "success",
      "memory_units": 506584,
      "name": "refund_with_multiple_outputs_to_buyer"
    },
    {
      "cpu_units": 27739992,
      "description": "Refund without buyer signature should fail",
      "execution_result": "success",
      "memory_units": 104788,
      "name": "refund_without_buyer_signature"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund with seller signature instead of buyer should fail",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_with_seller_signature_only"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund with impostor signature should fail",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_with_impostor_signature"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund before deadline expiry should fail",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_before_deadline"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund exactly at deadline should fail (must be strictly after)",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_at_exact_deadline"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund without time range should fail (missing temporal context)",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_with_no_time_range"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund with wrong total amount (80 ADA instead of 75) should fail",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_with_incorrect_amount"
    },
    {
      "cpu_units": 16828071,
      "description": "Partial refund (50 ADA to buyer) should fail",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_with_partial_refund"
    },
    {
      "cpu_units": 16828071,
      "description": "Excess refund (100 ADA to buyer) should fail",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_with_excess_refund"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund to wrong address (seller instead of buyer) should fail",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_to_wrong_address"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund leaving funds in script should fail (incomplete withdrawal)",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_with_remaining_script_output"
    },
    {
      "cpu_units": 16828071,
      "description": "Refund without valid deposit UTXO should fail (invalid escrow state)",
      "execution_result": "success",
      "memory_units": 62925,
      "name": "refund_without_prior_deposit"
    },
    {
      "cpu_units": 20829185,
      "description": "Refund attempt after seller has already accepted should fail (state validation)",
      "execution_result": "success",
      "memory_units": 83123,
      "name": "refund_after_accept_should_fail"
    },
    {
      "cpu_units": 44172123,
      "description": "Accept attempt after buyer has already refunded should fail (state validation)",
      "execution_result": "success",
      "memory_units": 167323,
      "name": "accept_after_refund_should_fail"
    },
    {
      "cpu_units": 20881518,
      "description": "Multiple refund attempts should fail (double spending prevention)",
      "execution_result": "success",
      "memory_units": 83124,
      "name": "double_refund_should_fail"
    },
    {
      "cpu_units": 44119790,
      "description": "Multiple accept attempts should fail (double spending prevention)",
      "execution_result": "success",
      "memory_units": 167322,
      "name": "double_accept_should_fail"
    }
  ],
  "execution_environment": {
    "evaluator": "PlutusTx.Eval-1.52.0.0"
  },
  "measurements": {
    "cpu_units": {
      "maximum": 139262037,
      "median": 20829185,
      "minimum": 24688,
      "sum": 1854357334,
      "sum_negative": 0,
      "sum_positive": 1854357334
    },
    "memory_units": {
      "maximum": 515103,
      "median": 83123,
      "minimum": 132,
      "sum": 6964895,
      "sum_negative": 0,
      "sum_positive": 6964895
    },
    "script_size_bytes": 3370,
    "term_size": 3346
  },
  "scenario": "two-party-escrow",
  "timestamp": "2025-09-10T12:24:34Z",
  "version": "1.0.0",
  "notes": "Manual metrics with test results - one failing test case due to validator logic"
}
